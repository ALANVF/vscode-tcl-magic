{
	"name": "Tcl",
	"scopeName": "source.tcl",
	"fileTypes": ["tcl"],
	"patterns": [
		{
			"include": "#empty-lines"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#command"
		},
		{
			"include": "#expr"
		}
	],
	"repository": {
		"empty-lines": {
			"match": "\\s+|\\n|\\r",
			"name": ""
		},
		"empty": {
			"patterns": [
				{
					"match": "[ \\t]+",
					"name": ""
				},
				{
					"begin": "(\\\\)$",
					"beginCaptures": {
						"0": {
							"name": "constant.character.escape.tcl"
						}
					},
					"end": "^"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"begin": "(?<=(?:^;?|[^\\\\];)[ \\t]*)#.*\\\\(?<!\\\\\\\\)$",
					"beginCaptures": {
						"0": {
							"name": "comment.tcl"
						}
					},
					"end": "^.*(?<!(?:^|[^\\\\])\\\\)$",
					"endCaptures": {
						"0": {
							"name": "comment.tcl"
						}
					},
					"patterns": [
						{
							"match": "^.*\\\\(?<!\\\\\\\\)$",
							"name": "comment.tcl"
						}
					]
				},
				{
					"match": "(?<=(?:^;?|[^\\\\];)[ \\t]*)#.*(?<![^\\\\]\\\\)$",
					"name": "comment.tcl"
				}
			]
		},
		"escape.braces": {
			"match": "\\\\[\\\\{}]",
			"name": "constant.character.escape.tcl"
		},
		"escape": {
			"patterns": [
				{
					"match": "\\\\[abfnrtv\\\\()\\[\\]{}\"$#;]",
					"name": "constant.character.escape.tcl"
				},
				{
					"match": "\\\\\\d+{1,3}",
					"name": "constant.character.escape.tcl"
				},
				{
					"match": "\\\\x\\h{1,2}",
					"name": "constant.character.escape.tcl"
				},
				{
					"match": "\\\\u\\h{1,4}",
					"name": "constant.character.escape.tcl"
				},
				{
					"match": "\\\\U\\h{1,8}",
					"name": "constant.character.escape.tcl"
				}
			]
		},
		"splat": {
			"match": "\\{\\*\\}(?=[$\\[{\"])",
			"name": "constant.language.tcl"
		},
		"variable": {
			"patterns": [
				{
					"begin": "(\\$(?:::)?\\w+(?:::\\w+)*)(\\()",
					"beginCaptures": {
						"1": {
							"name": "variable.tcl"
						},
						"2": {
							"name": "punctuation.definition.paren.begin.tcl"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.paren.end.tcl"
						}
					},
					"patterns": [
						{
							"include": "#escape"
						},
						{
							"include": "#splat"
						},
						{
							"include": "#nested-command"
						},
						{
							"include": "#variable"
						},
						{
							"match": "[^()\\[\\]{}$;]+",
							"name": "string.key.tcl"
						}
					]
				},
				{
					"match": "(?<!\\\\)\\$(?:::)?\\w+(?:::\\w+)*",
					"name": "variable.tcl"
				},
				{
					"begin": "(?<!\\\\)\\$\\{",
					"beginCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"patterns": [
						{
							"patterns": [
								{
									"include": "#escape"
								},
								{
									"include": "#~nested"
								},
								{
									"match": "[^\\\\{}]+",
									"name": "variable.tcl"
								}
							],
							"repository": {
								"~nested": {
									"begin": "\\{",
									"beginCaptures": {
										"0": {
											"name": "variable.tcl"
										}
									},
									"end": "\\}",
									"endCaptures": {
										"0": {
											"name": "variable.tcl"
										}
									},
									"patterns": [
										{
											"include": "#escape"
										},
										{
											"include": "$self"
										},
										{
											"match": "[^\\\\{}]+",
											"name": "variable.tcl"
										}
									]
								}
							}
						}
					]
				}
			]
		},
		"variable-name.ident": {
			"match": "(?:::)?\\w+(?:::\\w+)*",
			"name": "variable.tcl"
		},
		"variable-name.array": {
			"begin": "((?:::)?\\w+(?:::\\w+)*)(\\()",
			"beginCaptures": {
				"1": {
					"name": "variable.tcl"
				},
				"2": {
					"name": "punctuation.definition.paren.begin.tcl"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.paren.end.tcl"
				}
			},
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#splat"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#variable"
				},
				{
					"match": "[^\\s()\\[\\]{}$\\\\;]+",
					"name": "string.key.tcl"
				}
			]
		},
		"variable-name.braced": {
			"patterns": [
				{
					"begin": "\\{(?!\\*\\})",
					"beginCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"patterns": [
						{
							"include": "#escape"
						},
						{
							"include": "#~nested"
						},
						{
							"match": "[^\\\\{}]+",
							"name": "variable.tcl"
						}
					]
				}
			],
			"repository": {
				"~nested": {
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "variable.tcl"
						}
					},
					"patterns": [
						{
							"include": "#escape"
						},
						{
							"include": "#~nested"
						},
						{
							"match": "[^\\\\{}]+",
							"name": "variable.tcl"
						}
					]
				}
			}
		},
		"variable-name": {
			"patterns": [
				{
					"include": "#variable-name.array"
				},
				{
					"include": "#variable-name.ident"
				},
				{
					"include": "#variable-name.braced"
				}
			]
		},
		"constant.global.number": {
			"begin": "(?:\\B[+-]|\\b|\\B(?=\\.))(?<!\\.)(?=\\.?\\d)",
			"beginCaptures": {
				"0": {
					"name": "constant.numeric.tcl"
				}
			},
			"end": "(?<=[\\d\\.])",
			"patterns": [
				{
					"match": "(?x)\r\n\t\t\t\t\t\t0[oO]?\r\n\t\t\t\t\t\t[0-7]+(?:_+[0-7]+)*\r\n\t\t\t\t\t\t(?!\\.)\r\n\t\t\t\t\t\t\\b\r\n\t\t\t\t\t",
					"name": "constant.numeric.tcl"
				},
				{
					"match": "(?x)\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t\\d+(?:_+\\d+)*\r\n\t\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t\t\\.\r\n\t\t\t\t\t\t\t\t(?:\\d+(?:_+\\d+)*)?\r\n\t\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t\\.\r\n\t\t\t\t\t\t\t\\d+(?:_+\\d+)*\r\n\t\t\t\t\t\t\t(?!\\.)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t[eE]\r\n\t\t\t\t\t\t\t[+-]?\r\n\t\t\t\t\t\t\t\\d+(?:_+\\d+)*\r\n\t\t\t\t\t\t)?\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t(?<!\\.)\\b\r\n\t\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t(?<=\\.)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t",
					"name": "constant.numeric.tcl"
				},
				{
					"match": "(?x)\r\n\t\t\t\t\t\t0[dD]\r\n\t\t\t\t\t\t\\d+(?:_+\\d+)*\r\n\t\t\t\t\t\t(?![\\.eE])\r\n\t\t\t\t\t\t\\b\r\n\t\t\t\t\t",
					"name": "constant.numeric.tcl"
				},
				{
					"match": "(?x)\r\n\t\t\t\t\t\t0[xX]\r\n\t\t\t\t\t\t\\h+(?:_+\\h+)*\r\n\t\t\t\t\t\t(?!\\.)\r\n\t\t\t\t\t\t\\b\r\n\t\t\t\t\t",
					"name": "constant.numeric.tcl"
				},
				{
					"match": "(?x)\r\n\t\t\t\t\t\t0[bB]\r\n\t\t\t\t\t\t[01]+(?:_+[01]+)*\r\n\t\t\t\t\t\t(?!\\.)\r\n\t\t\t\t\t\t\\b\r\n\t\t\t\t\t",
					"name": "constant.numeric.tcl"
				}
			]
		},
		"constant.global": {
			"patterns": [
				{
					"include": "#constant.global.number"
				}
			]
		},
		"constant.math.number": {
			"match": "\\b(?<!::)(?:NaN|Inf)(?!::)\\b",
			"name": "constant.numeric.tcl"
		},
		"constant.math": {
			"patterns": [
				{
					"include": "#constant.math.number"
				}
			]
		},
		"expr": {
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#splat"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#block-or-list"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#constant.global"
				}
			]
		},
		"expr.stringy": {
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#splat"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#constant.global"
				},
				{
					"include": "#string.ident"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#string.braced"
				},
				{
					"include": "#variable"
				}
			]
		},
		"expr.only-stringy": {
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#splat"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#string.ident"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#string.braced"
				},
				{
					"include": "#variable"
				}
			]
		},
		"expr.math": {
			"patterns": [
				{
					"include": "#nested-command"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#constant.global"
				},
				{
					"include": "#constant.math"
				},
				{
					"include": "#~math-func"
				},
				{
					"include": "#~math-op"
				},
				{
					"include": "#~paren"
				}
			],
			"repository": {
				"~math-func": {
					"begin": "\\b([a-zA-Z_]\\w*)[ \\t]*(\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "(?x)\\b(?:\r\n\t\t\t\t\t\t\t\t\t\t abs|acos|asin|atan|atan2\r\n\t\t\t\t\t\t\t\t\t\t|bool\r\n\t\t\t\t\t\t\t\t\t\t|ceil|cos|cosh\r\n\t\t\t\t\t\t\t\t\t\t|double\r\n\t\t\t\t\t\t\t\t\t\t|entier|exp\r\n\t\t\t\t\t\t\t\t\t\t|floor|fmod\r\n\t\t\t\t\t\t\t\t\t\t|hypot\r\n\t\t\t\t\t\t\t\t\t\t|int|isfinite|isinf|isnan|isnormal|isqrt|issubnormal|isunordered\r\n\t\t\t\t\t\t\t\t\t\t|log|log10\r\n\t\t\t\t\t\t\t\t\t\t|max|min\r\n\t\t\t\t\t\t\t\t\t\t|pow\r\n\t\t\t\t\t\t\t\t\t\t|rand|round\r\n\t\t\t\t\t\t\t\t\t\t|sin|sinh|sqrt|srand\r\n\t\t\t\t\t\t\t\t\t\t|tan|tanh\r\n\t\t\t\t\t\t\t\t\t\t|wide\r\n\t\t\t\t\t\t\t\t\t)\\b",
									"name": "keyword.tcl"
								},
								{
									"match": "\\w+",
									"name": "entity.name.function.tcl"
								}
							]
						},
						"2": {
							"name": "punctuation.definition.paren.begin.tcl"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.paren.end.tcl"
						}
					},
					"patterns": [
						{
							"include": "#empty"
						},
						{
							"match": ",",
							"name": "punctuation.separator.comma.tcl"
						},
						{
							"include": "#expr.math"
						}
					]
				},
				"~math-op": {
					"patterns": [
						{
							"match": "[=!<>]=|[<>]|\\b(?:eq|ne|[gl][te]|in|ni)\\b",
							"name": "keyword.operator.relational.tcl"
						},
						{
							"match": "&&|(?:\\|\\|)|[!?:]",
							"name": "keyword.operator.logical.tcl"
						},
						{
							"match": "\\*{1,2}|<<|>>|[+\\-/%&|^~]",
							"name": "keyword.operator.arithmetic.tcl"
						}
					]
				},
				"~paren": {
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.paren.begin.tcl"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.paren.end.tcl"
						}
					},
					"patterns": [
						{
							"include": "#empty"
						},
						{
							"include": "#expr.math"
						}
					]
				}
			}
		},
		"expr.index": {
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#splat"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#constant.global"
				},
				{
					"include": "#string.quoted"
				},
				{
					"include": "#variable"
				},
				{
					"match": "(?<=^|\\s)(end)([+-])(?=[+-]?[\\d\\[{$\"])",
					"captures": {
						"1": {
							"name": "constant.language.tcl"
						},
						"2": {
							"name": "keyword.operator.arithmetic.tcl"
						}
					}
				},
				{
					"match": "(?<=^|\\s)(end)(?=$|[\\s}\\];])",
					"name": "constant.language.tcl"
				}
			]
		},
		"flag": {
			"match": "(?<=[\\s{])-(?!\\d)[\\w\\-]+",
			"name": "constant.other.symbol"
		},
		"string.quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "string.tcl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string.tcl"
				}
			},
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"match": "\\\\$",
					"name": "constant.character.escape.tcl"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#variable"
				},
				{
					"match": "[^\\[\\]$\\\\\"]+",
					"name": "string.tcl"
				}
			]
		},
		"string.braced": {
			"begin": "\\{(?!\\*\\})",
			"beginCaptures": {
				"0": {
					"name": "string.tcl"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "string.tcl"
				}
			},
			"patterns": [
				{
					"include": "#escape.braces"
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "string.tcl"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "string.tcl"
						}
					},
					"patterns": [
						{
							"include": "#escape.braces"
						},
						{
							"include": "$self"
						},
						{
							"match": "[^\\\\{}]+",
							"name": "string.tcl"
						}
					]
				},
				{
					"match": "[^\\\\{}]+",
					"name": "string.tcl"
				}
			]
		},
		"string.ident": {
			"match": "[^\\[\\]{}$\\\\\"\\s]+",
			"name": "string.tcl"
		},
		"block-or-list": {
			"begin": "\\{(?!\\*\\})",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.brace.begin.tcl"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.brace.begin.tcl"
				}
			},
			"patterns": [
				{
					"include": "#empty-lines"
				},
				{
					"begin": "(?x)(?=\r\n\t\t\t\t\t\t(?:\\{[ \\t]*)*\r\n\t\t\t\t\t\t(?:\r\n\t\t\t\t\t\t\t  [+-]?\\.?\\d\r\n\t\t\t\t\t\t\t| \"\r\n\t\t\t\t\t\t\t| \\\\\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)",
					"end": "(?=\\})",
					"patterns": [
						{
							"include": "#empty"
						},
						{
							"include": "#expr"
						}
					]
				},
				{
					"begin": "(?!\\})",
					"end": "(?=\\})",
					"patterns": [
						{
							"include": "#empty-lines"
						},
						{
							"include": "#comment"
						},
						{
							"include": "#command"
						},
						{
							"include": "#expr"
						}
					]
				}
			]
		},
		"math-block": {
			"begin": "\\{(?!\\*\\})",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.block.begin.tcl"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.end.tcl"
				}
			},
			"patterns": [
				{
					"include": "#empty"
				},
				{
					"include": "#expr.math"
				}
			]
		},
		"command-name.ident": {
			"match": "[^\\[\\]{}$\\\\\"\\s]+",
			"name": "entity.name.function.tcl"
		},
		"command-name.quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "entity.name.function.tcl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "entity.name.function.tcl"
				}
			},
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"match": "\\\\$",
					"name": "constant.character.escape.tcl"
				},
				{
					"include": "#nested-command"
				},
				{
					"include": "#variable"
				},
				{
					"match": "[^\\[\\]$\\\\\"]+",
					"name": "entity.name.function.tcl"
				}
			]
		},
		"command-name.braced": {
			"begin": "\\{(?!\\*\\})",
			"beginCaptures": {
				"0": {
					"name": "entity.name.function.tcl"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "entity.name.function.tcl"
				}
			},
			"patterns": [
				{
					"include": "#escape.braces"
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "entity.name.function.tcl"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "entity.name.function.tcl"
						}
					},
					"patterns": [
						{
							"include": "#escape.braces"
						},
						{
							"include": "$self"
						},
						{
							"match": "[^\\\\{}]+",
							"name": "entity.name.function.tcl"
						}
					]
				},
				{
					"match": "[^\\\\{}]+",
					"name": "entity.name.function.tcl"
				}
			]
		},
		"command-name": {
			"patterns": [
				{
					"include": "#command-name.ident"
				}
			]
		},
		"nested-command": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.command.begin.tcl"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.command.end.tcl"
				}
			},
			"patterns": [
				{
					"include": "#empty"
				},
				{
					"include": "#command"
				}
			]
		},
		"command": {
			"begin": "(?<=(?:^[\\[{;]?|[\\[{;])[ \\t]*)",
			"end": "$|(?=[\\]};])",
			"patterns": [
				{
					"patterns": [
						{
							"include": "#empty"
						},
						{
							"include": "#~cmd"
						},
						{
							"include": "#~cmd+exprs"
						},
						{
							"include": "#~cmd+flags+exprs"
						},
						{
							"include": "#~cmd+var+expr"
						},
						{
							"include": "#~expr"
						},
						{
							"include": "#~if"
						},
						{
							"include": "#~while"
						},
						{
							"include": "#~for"
						},
						{
							"include": "#~foreach"
						},
						{
							"include": "#~proc"
						},
						{
							"include": "#~stringy-commands"
						},
						{
							"include": "#~after"
						},
						{
							"include": "#~gets"
						},
						{
							"include": "#~open"
						},
						{
							"include": "#~puts"
						},
						{
							"include": "#~lassign"
						},
						{
							"include": "#~global"
						},
						{
							"include": "#~catch"
						},
						{
							"include": "#~encoding"
						},
						{
							"include": "#~dict"
						},
						{
							"include": "#~string"
						},
						{
							"include": "#~any-cmd"
						},
						{
							"include": "#expr"
						}
					],
					"repository": {
						"~exprs-until-end": {
							"begin": "(?!\\s|$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#expr"
								}
							]
						},
						"~empty+exprs-until-end": {
							"begin": "(?=\\s|\\\\$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#~exprs-until-end"
								}
							]
						},
						"~empty&exprs-until-end": {
							"begin": "(?=\\s|\\\\$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#expr"
								}
							]
						},
						"~exprs&empty-until-end": {
							"begin": "(?!\\s|$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#expr"
								}
							]
						},
						"~empty&flags&exprs-until-end": {
							"begin": "(?=\\s|\\\\$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#flag"
								},
								{
									"include": "#expr"
								}
							]
						},
						"~cmd": {
							"begin": "(?x)(?:\\b|\\B::)(?:\r\n\t\t\t\t\t\t auto_reset\r\n\t\t\t\t\t\t|break\r\n\t\t\t\t\t\t|continue\r\n\t\t\t\t\t\t|pwd|platform::(?:generic|identify)\r\n\t\t\t\t\t)(?=[\\s\\]};]|\\\\$|$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								}
							]
						},
						"~cmd+exprs": {
							"begin": "(?x)(?:\\b|\\B::)(?:\r\n\t\t\t\t\t\t close|concat\r\n\t\t\t\t\t\t|eof|eval|exit\r\n\t\t\t\t\t\t|fblocked|fileevent|flush\r\n\t\t\t\t\t\t|join\r\n\t\t\t\t\t\t|list|l(?:index|insert|length|range|remove|repeat|replace|reverse|search|sort)\r\n\t\t\t\t\t\t|next\r\n\t\t\t\t\t\t|pid|platform::(?:patterns|shell::(?:generic|identify|platform))\r\n\t\t\t\t\t\t|seek\r\n\t\t\t\t\t\t|tell|time\r\n\t\t\t\t\t)(?=[\\s\\]};]|\\\\$|$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#expr"
								}
							]
						},
						"~cmd+flags+exprs": {
							"begin": "(?x)(?:\\b|\\B::)(?:\r\n\t\t\t\t\t\tf(?:configure|copy)\r\n\t\t\t\t\t\t|read|return\r\n\t\t\t\t\t\t|safe::(?:\r\n\t\t\t\t\t\t\tinterp(?:\r\n\t\t\t\t\t\t\t\t Create\r\n\t\t\t\t\t\t\t\t|Init\r\n\t\t\t\t\t\t\t\t|Configure\r\n\t\t\t\t\t\t\t\t|Delete\r\n\t\t\t\t\t\t\t\t|AddToAccessPath\r\n\t\t\t\t\t\t\t\t|FindInAccessPath\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t|setLogCmd\r\n\t\t\t\t\t\t)|socket\r\n\t\t\t\t\t\t|timerate\r\n\t\t\t\t\t)(?=[\\s\\]};]|\\\\$|$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#flag"
								},
								{
									"include": "#expr"
								}
							]
						},
						"~cmd+var+expr": {
							"begin": "(?x)(?:\\b|\\B::)(?:\r\n\t\t\t\t\t\t append\r\n\t\t\t\t\t\t|incr\r\n\t\t\t\t\t\t|l(?:append|pop|set)\r\n\t\t\t\t\t\t|set\r\n\t\t\t\t\t\t|vwait|variable\r\n\t\t\t\t\t)(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "((?:::)?\\w+(?:::\\w+)*)(\\()",
									"beginCaptures": {
										"1": {
											"name": "variable.tcl"
										},
										"2": {
											"name": "punctuation.definition.paren.begin.tcl"
										}
									},
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#escape"
										},
										{
											"include": "#splat"
										},
										{
											"include": "#nested-command"
										},
										{
											"include": "#string.quoted"
										},
										{
											"include": "#variable"
										},
										{
											"match": "[^\\s()\\[\\]{}$;]+",
											"name": "string.key.tcl"
										},
										{
											"begin": "\\)|(?=\\s)|$",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.paren.end.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"include": "#expr"
												}
											]
										}
									]
								},
								{
									"begin": "(?:::)?\\w+(?:::\\w+)*",
									"beginCaptures": {
										"0": {
											"name": "variable.tcl"
										}
									},
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"include": "#expr"
										}
									]
								},
								{
									"begin": "\\{(?!\\*\\})",
									"beginCaptures": {
										"0": {
											"name": "variable.tcl"
										}
									},
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"patterns": [
												{
													"include": "#escape"
												},
												{
													"include": "#~nested"
												},
												{
													"match": "[^\\\\{}]+",
													"name": "variable.tcl"
												},
												{
													"begin": "\\}",
													"beginCaptures": {
														"0": {
															"name": "variable.tcl"
														}
													},
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#empty"
														},
														{
															"include": "#expr"
														}
													]
												}
											],
											"repository": {
												"~nested": {
													"begin": "\\{",
													"beginCaptures": {
														"0": {
															"name": "variable.tcl"
														}
													},
													"end": "\\}",
													"endCaptures": {
														"0": {
															"name": "variable.tcl"
														}
													},
													"patterns": [
														{
															"include": "#escape"
														},
														{
															"include": "#~nested"
														},
														{
															"match": "[^\\\\{}]+",
															"name": "variable.tcl"
														}
													]
												}
											}
										}
									]
								},
								{
									"begin": "(?!\\s)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"include": "#expr"
										}
									]
								}
							]
						},
						"~expr": {
							"begin": "(?:\\b|\\B::)expr(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "\\{(?!\\*\\})",
									"beginCaptures": {
										"0": {
											"name": "punctuation.definition.brace.begin.tcl"
										}
									},
									"end": "\\}",
									"endCaptures": {
										"0": {
											"name": "punctuation.definition.brace.end.tcl"
										}
									},
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"include": "#expr.math"
										}
									]
								},
								{
									"include": "#expr.math"
								}
							]
						},
						"~if": {
							"patterns": [
								{
									"begin": "(?:\\b|\\B::)if(?=\\s|\\\\$)",
									"beginCaptures": {
										"0": {
											"name": "keyword.tcl"
										}
									},
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"begin": "(?!\\s|$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#~cond+block"
												},
												{
													"begin": "(?=\\s|\\\\$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#empty"
														},
														{
															"begin": "(?<=^|\\s)elseif(?=\\s|\\\\$)",
															"beginCaptures": {
																"0": {
																	"name": "keyword.tcl"
																}
															},
															"end": "$|(?=[\\]};]|[ \\t]*(?:elseif|else)(?:\\s|\\\\$))",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};]|[ \\t]*(?:elseif|else)(?:\\s|\\\\$))",
																	"patterns": [
																		{
																			"include": "#~cond+block"
																		}
																	]
																}
															]
														},
														{
															"begin": "(?<=^|\\s)else(?=\\s|\\\\$)",
															"beginCaptures": {
																"0": {
																	"name": "keyword.tcl"
																}
															},
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"include": "#expr"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							],
							"repository": {
								"~cond+block": {
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};]|[ \\t]*(?:elseif|else)(?:\\s|\\\\$))",
									"patterns": [
										{
											"begin": "\\{(?!\\*\\})",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.brace.begin.tcl"
												}
											},
											"end": "\\}",
											"endCaptures": {
												"0": {
													"name": "punctuation.definition.brace.end.tcl"
												}
											},
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"include": "#expr.math"
												}
											]
										},
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};]|[ \\t]*(?:elseif|else)(?:\\s|\\\\$))",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"match": "(?<=^|\\s)then(?=\\s|\\\\$)",
													"name": "keyword.tcl"
												},
												{
													"include": "#expr"
												}
											]
										}
									]
								}
							}
						},
						"~while": {
							"begin": "(?:\\b|\\B::)while(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#math-block"
										},
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~for": {
							"begin": "(?:\\b|\\B::)for(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#math-block"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~destructure-variables": {
							"begin": "\\{(?!\\*\\})",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.block.begin.tcl"
								}
							},
							"end": "\\}",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.block.end.tcl"
								}
							},
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"include": "#variable-name"
								}
							]
						},
						"~foreach": {
							"begin": "(?:\\b|\\B::)foreach(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#variable-name.array"
										},
										{
											"include": "#variable-name.ident"
										},
										{
											"include": "#~destructure-variables"
										},
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~routine-params": {
							"patterns": [
								{
									"include": "#~args"
								},
								{
									"include": "#~param"
								},
								{
									"begin": "\\{(?!\\*\\})",
									"beginCaptures": {
										"0": {
											"name": "punctuation.definition.brace.begin.tcl"
										}
									},
									"end": "\\}",
									"endCaptures": {
										"0": {
											"name": "punctuation.definition.brace.end.tcl"
										}
									},
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"include": "#~args"
										},
										{
											"include": "#~param"
										},
										{
											"begin": "\\{(?!\\*\\})",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.brace.begin.tcl"
												}
											},
											"end": "\\}",
											"endCaptures": {
												"0": {
													"name": "punctuation.definition.brace.end.tcl"
												}
											},
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "\\b\\w+\\b",
													"beginCaptures": {
														"0": {
															"name": "variable.parameter.tcl"
														}
													},
													"end": "(?=\\})",
													"patterns": [
														{
															"include": "#empty"
														},
														{
															"include": "#expr"
														}
													]
												}
											]
										}
									]
								}
							],
							"repository": {
								"~args": {
									"match": "(?<=[\\s{\"])args(?=[\\s}\"])",
									"name": "constant.parameter.tcl"
								},
								"~param": {
									"match": "\\b\\w+\\b",
									"name": "variable.parameter.tcl"
								}
							}
						},
						"~proc": {
							"begin": "(?:\\b|\\B::)proc(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#command-name"
										},
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~routine-params"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~after": {
							"begin": "(?:\\b|\\B::)after(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"begin": "\\b(?:cancel|idle|info)(?=\\s|\\\\?$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										},
										{
											"include": "#expr"
										}
									]
								}
							]
						},
						"~stringy-commands": {
							"patterns": [
								{
									"include": "#~cmd+stringy"
								},
								{
									"include": "#~cmd+stringy+exprs"
								},
								{
									"include": "#~cmd+all-stringy"
								},
								{
									"include": "#~cmd+flags+all-stringy"
								},
								{
									"include": "#~cmd+all-stringy-expr"
								}
							]
						},
						"~cmd+stringy": {
							"begin": "(?:\\b|\\B::)bgerror(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr.only-stringy"
										}
									]
								}
							]
						},
						"~cmd+stringy+exprs": {
							"begin": "(?:\\b|\\B::)(?:auto_execok|cd|tcl_(?:endOfWord|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)))(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr.only-stringy"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~cmd+all-stringy": {
							"begin": "(?:\\b|\\B::)split(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr.only-stringy"
										},
										{
											"include": "#empty"
										}
									]
								}
							]
						},
						"~cmd+flags+all-stringy": {
							"begin": "(?:\\b|\\B::)(?:source|subst)(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#flag"
										},
										{
											"include": "#expr.only-stringy"
										},
										{
											"include": "#empty"
										}
									]
								}
							]
						},
						"~cmd+all-stringy-expr": {
							"begin": "(?:\\b|\\B::)error(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr.stringy"
										},
										{
											"include": "#empty"
										}
									]
								}
							]
						},
						"~io.handle-name": {
							"match": "(?<=\\s|^)[a-zA-Z_]\\w*(?=[\\s\\]};]|\\\\?$)",
							"name": "constant.language.tcl"
						},
						"~gets": {
							"begin": "(?:\\b|\\B::)gets(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#~io.handle-name"
										},
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~open.permission": {
							"match": "(?x)(?<=[\\s{]|^)(?:\r\n\t\t\t\t\t\t (?:RD|WR)ONLY\r\n\t\t\t\t\t\t|RDWR\r\n\t\t\t\t\t\t|APPEND\r\n\t\t\t\t\t\t|BINARY\r\n\t\t\t\t\t\t|CREAT\r\n\t\t\t\t\t\t|EXCL\r\n\t\t\t\t\t\t|NOCTTY\r\n\t\t\t\t\t\t|NONBLOCK\r\n\t\t\t\t\t\t|TRUNC\r\n\t\t\t\t\t)(?=[\\s\\]};]|\\\\?$)",
							"name": "constant.tcl"
						},
						"~open": {
							"begin": "(?:\\b|\\B::)open(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr.only-stringy"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"match": "(?<=[\\s{]|^)[rwa]\\+?(?=[\\s\\]};]|\\\\?$)",
															"name": "constant.tcl"
														},
														{
															"begin": "\\{(?!\\*\\})",
															"beginCaptures": {
																"0": {
																	"name": "punctuation.definition.block.begin.tcl"
																}
															},
															"end": "\\}",
															"endCaptures": {
																"0": {
																	"name": "punctuation.definition.block.end.tcl"
																}
															},
															"patterns": [
																{
																	"include": "#~open.permission"
																}
															]
														},
														{
															"include": "#~open.permission"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~puts": {
							"begin": "(?:\\b|\\B::)puts(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#flag"
										},
										{
											"begin": "(?<=\\s|^)[a-zA-Z_]\\w*(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "constant.language.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"include": "#expr.stringy"
												}
											]
										},
										{
											"include": "#expr.stringy"
										},
										{
											"include": "#empty"
										}
									]
								}
							]
						},
						"~lassign": {
							"begin": "(?:\\b|\\B::)lassign(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														},
														{
															"include": "#empty"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~global": {
							"begin": "(?:\\b|\\B::)global(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#variable-name.ident"
										},
										{
											"include": "#expr"
										},
										{
											"include": "#empty"
										}
									]
								}
							]
						},
						"~catch": {
							"begin": "(?:\\b|\\B::)catch(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#expr"
										},
										{
											"begin": "(?=\\s|\\\\$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#variable-name"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~encoding.name": {
							"match": "[a-zA-Z_][\\w\\-]*(?=\\s|\\\\?$)",
							"name": "text.tcl"
						},
						"~encoding": {
							"begin": "(?:\\b|\\B::)encoding(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"begin": "\\bconvert(?:from|to)(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~encoding-name"
														},
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.only-stringy"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bdirs(?=\\s|\\\\?$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														}
													]
												}
											]
										},
										{
											"begin": "names",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])"
										},
										{
											"begin": "\\bsystem(?=\\s|\\\\?$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										},
										{
											"include": "#expr"
										}
									]
								}
							]
						},
						"~dict.pairs": {
							"patterns": [
								{
									"include": "#expr.stringy"
								},
								{
									"begin": "(?=\\s|\\\\$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"begin": "(?!\\s|$)",
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#expr"
												},
												{
													"begin": "(?=\\s|\\\\$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#empty"
														},
														{
															"begin": "(?!\\s|$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#~dict.pairs"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						"~dict": {
							"begin": "(?:\\b|\\B::)dict(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"begin": "\\bappend(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.only-stringy"
																						},
																						{
																							"include": "#empty"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bcreate(?=\\s|\\\\?$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~dict.pairs"
														}
													]
												}
											]
										},
										{
											"begin": "\\bexists(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.stringy"
																						},
																						{
																							"include": "#empty"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bfor(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~destructure-variables"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bget(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"include": "#empty"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bincr(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\binfo(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										},
										{
											"begin": "\\blappend(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr"
																						},
																						{
																							"include": "#empty"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bmap(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~destructure-variables"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bmerge(?=\\s|\\\\?$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"include": "#empty"
														}
													]
												}
											]
										},
										{
											"begin": "\\bremove(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"include": "#empty"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\breplace(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#~dict.pairs"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bset(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"include": "#empty"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bsize(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr"
														}
													]
												}
											]
										},
										{
											"begin": "\\bunset(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#variable-name"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.stringy"
																		},
																		{
																			"include": "#empty"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"include": "#expr"
										}
									]
								}
							]
						},
						"~string.is.class": {
							"match": "(?x)(?<=^|\\s)(\r\n\t\t\t\t\t\t alnum|alpha|ascii\r\n\t\t\t\t\t\t|boolean\r\n\t\t\t\t\t\t|control\r\n\t\t\t\t\t\t|dict|digit|double\r\n\t\t\t\t\t\t|entier\r\n\t\t\t\t\t\t|false\r\n\t\t\t\t\t\t|graph\r\n\t\t\t\t\t\t|integer\r\n\t\t\t\t\t\t|list|lower\r\n\t\t\t\t\t\t|print|punct\r\n\t\t\t\t\t\t|space\r\n\t\t\t\t\t\t|true\r\n\t\t\t\t\t\t|upper\r\n\t\t\t\t\t\t|wideinteger|wordchar\r\n\t\t\t\t\t\t|xdigit\r\n\t\t\t\t\t)(?=\\s|\\\\$)",
							"name": "constant.other.tcl"
						},
						"~string.is.flags": {
							"patterns": [
								{
									"match": "(?<=^|\\s)(-strict)(?=\\s|\\\\?$)",
									"name": "constant.other.symbol"
								},
								{
									"begin": "(?<=^|\\s)(-failindex)(?=\\s|\\\\?$)",
									"beginCaptures": {
										"0": {
											"name": "constant.other.symbol"
										}
									},
									"end": "(?<!^|\\s|(?:-failindex))",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"begin": "(?!\\s|$)",
											"end": "(?<!^|\\s)",
											"patterns": [
												{
													"include": "#variable-name"
												}
											]
										}
									]
								}
							]
						},
						"~string.nocase": {
							"match": "(?<=^|\\s)(-nocase)(?=\\s|\\\\?$)",
							"name": "constant.other.symbol"
						},
						"~string.nocase+length": {
							"patterns": [
								{
									"include": "#~string.nocase"
								},
								{
									"begin": "(?<=^|\\s)(-length)(?=\\s|\\\\?$)",
									"beginCaptures": {
										"0": {
											"name": "constant.other.symbol"
										}
									},
									"end": "(?<!^|\\s|(?:-length))",
									"patterns": [
										{
											"include": "#empty"
										},
										{
											"begin": "(?!\\s|$)",
											"end": "(?<!^|\\s)",
											"patterns": [
												{
													"include": "#expr"
												}
											]
										}
									]
								}
							]
						},
						"~string": {
							"begin": "(?:\\b|\\B::)string(?=\\s|\\\\$)",
							"beginCaptures": {
								"0": {
									"name": "keyword.tcl"
								}
							},
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#empty"
								},
								{
									"begin": "(?!\\s|$)",
									"end": "$|(?=[\\]};])",
									"patterns": [
										{
											"begin": "\\bcat(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														}
													]
												}
											]
										},
										{
											"begin": "\\b(?:compare|equal)(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~string.nocase+length"
														},
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#~string.nocase+length"
																		},
																		{
																			"include": "#expr.only-stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.only-stringy"
																						},
																						{
																							"begin": "(?=\\s|\\\\$)",
																							"end": "$|(?=[\\]};])",
																							"patterns": [
																								{
																									"include": "#empty"
																								},
																								{
																									"begin": "(?!\\s|$)",
																									"end": "$|(?=[\\]};])",
																									"patterns": [
																										{
																											"include": "#expr.only-stringy"
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\b(?:first|last)(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.only-stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.index"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\b(?:index|wordend|wordstart)(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.index"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\binsert(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.index"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.only-stringy"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\bis(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#~string.is.class"
														},
														{
															"include": "#expr"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#~string.is.flags"
																		},
																		{
																			"include": "#expr.only-stringy"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#~string.is.flags"
																						},
																						{
																							"include": "#expr.only-stringy"
																						},
																						{
																							"begin": "(?=\\s|\\\\$)",
																							"end": "$|(?=[\\]};])",
																							"patterns": [
																								{
																									"include": "#empty"
																								},
																								{
																									"begin": "(?!\\s|$)",
																									"end": "$|(?=[\\]};])",
																									"patterns": [
																										{
																											"include": "#expr.only-stringy"
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\b(?:length|reverse|bytelength)(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														}
													]
												}
											]
										},
										{
											"begin": "\\b(?:range|to(?:lower|title|upper))(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.index"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.index"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\brepeat(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\breplace(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.index"
																		},
																		{
																			"begin": "(?=\\s|\\\\$)",
																			"end": "$|(?=[\\]};])",
																			"patterns": [
																				{
																					"include": "#empty"
																				},
																				{
																					"begin": "(?!\\s|$)",
																					"end": "$|(?=[\\]};])",
																					"patterns": [
																						{
																							"include": "#expr.index"
																						},
																						{
																							"begin": "(?=\\s|\\\\$)",
																							"end": "$|(?=[\\]};])",
																							"patterns": [
																								{
																									"include": "#empty"
																								},
																								{
																									"begin": "(?!\\s|$)",
																									"end": "$|(?=[\\]};])",
																									"patterns": [
																										{
																											"include": "#expr.only-stringy"
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"begin": "\\btrim(?:left|right)?(?=\\s|\\\\$)",
											"beginCaptures": {
												"0": {
													"name": "keyword.tcl"
												}
											},
											"end": "$|(?=[\\]};])",
											"patterns": [
												{
													"include": "#empty"
												},
												{
													"begin": "(?!\\s|$)",
													"end": "$|(?=[\\]};])",
													"patterns": [
														{
															"include": "#expr.only-stringy"
														},
														{
															"begin": "(?=\\s|\\\\$)",
															"end": "$|(?=[\\]};])",
															"patterns": [
																{
																	"include": "#empty"
																},
																{
																	"begin": "(?!\\s|$)",
																	"end": "$|(?=[\\]};])",
																	"patterns": [
																		{
																			"include": "#expr.only-stringy"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"include": "#expr"
										}
									]
								}
							]
						},
						"~any-cmd": {
							"begin": "(?!\\s|$)",
							"end": "$|(?=[\\]};])",
							"patterns": [
								{
									"include": "#command-name"
								},
								{
									"include": "#expr"
								},
								{
									"include": "#~empty&flags&exprs-until-end"
								}
							]
						}
					}
				}
			]
		}
	}
}